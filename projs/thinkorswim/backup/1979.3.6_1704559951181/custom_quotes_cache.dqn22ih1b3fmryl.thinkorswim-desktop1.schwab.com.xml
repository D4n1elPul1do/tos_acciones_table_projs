<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<PREFERENCES VERSION="7">
  <CUSTOM_QUOTES_CACHE>
    <QUOTE-0 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="#### DailyRelRange&#10;&#10;#script spr_lbl {&#10;#def priceB = close(priceType = PriceType.BID);&#10;#def priceA = close(priceType = PriceType.ASK);&#10;#plot Spread = priceA - priceB;&#10;#AddLabel(yes, Concat(&quot;Spr: &quot;, Spread), if Spread &lt;= .04 #then Color.GREEN else if Spread &lt;= .10 then Color.YELLOW #else COLOR.WHITE);&#10;&#10;#}&#10;&#10;#input price = close;&#10;#def RPR = Round((price – low) / (high – low) * 100) - 1;&#10;#AddLabelForReferencing(yes, Concat(RPR, &quot;%&quot;), if RPR &gt; 75 #then Color.GREEN else color.current);&#10;#plot x = 1;&#10;&#10;&#10;&#10;input price = close;&#10;def RPR = round((price – low) / (high – low) *100);&#10;def resPorc;&#10;&#10;if RPR &lt; 10 &amp;&amp; RPR  &gt; 5 { resPorc = 0; } else { if RPR == 100 { resPorc = 0;  } else {resPorc = RPR; }}&#10;&#10;AddLabelForReferencing(yes, concat(resPorc, &quot;%&quot;), if resPorc &gt; 79 then CreateColor(88, 142, 204) else if resPorc &lt; 25 then color.pink else color.current);&#10;plot x =1;&#10;&#10;#### DailyRelRange" INDEX="0" NAME="DailyRelRange" PRICE_TYPE="last" VERSION="414"/>
    <QUOTE-1 AGG_PERIOD="m" CANDLE_SESSION="false" CODE="#### Spr 0.05&#10;&#10;#ask() - bid() is greater than or equal to 0.05&#10;&#10;&#10;&#10;def spre = ask() - bid();&#10;&#10;AddLabelForReferencing(yes, concat(spre, &quot;&quot;), if spre &lt;= 0.05 then if spre &gt; 0.05 &amp;&amp; spre &lt;= 0.10 then color.LIGHT_ORANGE  else  color.LIGHT_GREEN else if spre &gt; 0.10 then color.BLACK else color.LIGHT_ORANGE);&#10;&#10;&#10;#AddLabelForReferencing(yes, concat(spre, &quot;&quot;), if spre &gt; 0.05 &amp;&amp; spre &lt;= 0.10 then color.LIGHT_ORANGE  else color.BLACK);&#10;&#10;&#10;&#10;plot x =spre;&#10;&#10;#### Spr 0.05&#10;" INDEX="1" NAME="Spr 0.05" PRICE_TYPE="last" VERSION="420"/>
    <QUOTE-10 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="plot rest = (volume from 0 + 20 bars ago)/1000;" INDEX="10" NAME="Custom11" PRICE_TYPE="last" VERSION="1216034"/>
    <QUOTE-11 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="plot defaultPlot = &#10;(volume[0+58] )/1000&#10;;" INDEX="11" NAME="Custom12" PRICE_TYPE="last" VERSION="1216763"/>
    <QUOTE-12 AGG_PERIOD="10m" CANDLE_SESSION="false" CODE="&#10;#===================== borrar codigo&#10;&#10;def volMin = Volume[0]/1000;&#10;&#10;def openMin1 = Open*100;&#10;def highMin1 = High*100;&#10;def lowMin1 = Low*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH = Round(((highMin1 - openMin1)/openMin1)*100,2);&#10;&#10;def prcentL = Round(((lowMin1 - openMin1)/openMin1)*100,2);&#10;&#10;&#10;def division = (highMin1 + lowMin1)/2;&#10;&#10;def percentohl = ((division - openMin1)/openMin1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSignal = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorPl = percentohl;&#10;&#10;&#10;#plot variable = 11111;&#10;&#10;declare lower;&#10;&#10;def O1 = open;&#10;def H1 = high;&#10;def C1 = close;&#10;def L1 = low;&#10;def V1 = volume;&#10;def Buying1 = if isNAN(V1*(C1-L1)/(H1-L1)) then 0 else V1*(C1-L1)/(H1-L1);&#10;def Selling1 = if isNAN(V1*(H1-C1)/(H1-L1)) then 0 else V1*(H1-C1)/(H1-L1);&#10;&#10;&#10;def Selling2 = 1;&#10;def Buying2 = 1;&#10;&#10;&#10;def MinSelling1 = if Selling1 &lt;= 0 then Selling2 else Selling1;&#10;def MinBulling1 = if Buying1  &lt;= 0 then Buying2 else Buying1;&#10;&#10;&#10;def RVBS1 = Round(Buying1 / MinSelling1, 2);&#10;&#10;#valor.SetDefaultColor(CreateColor(109, 156, 230));&#10;#valor.SetPaintingStrategy(PaintingStrategy.ARROW_UP);&#10;#valor.SetLineWeight(2);&#10;&#10;##==============================&#10;&#10;def O_1 = open[1];&#10;def H_1 = high[1];&#10;def C_1 = close[1];&#10;def L_1 = low[1];&#10;def V_1 = volume[1];&#10;def Buying_1 = V_1*(C_1-L_1)/(H_1-L_1);&#10;def Selling_1 = V_1*(H_1-C_1)/(H_1-L_1);&#10;&#10;&#10;def Selling_2 = 1;&#10;def Buying_2 = 1;&#10;&#10;&#10;def MinSelling_1 = if Selling_1 &lt;= 0 then Selling_2 else Selling_1;&#10;def MinBulling_1 = if Buying_1  &lt;= 0 then Buying_2 else Buying_1;&#10;&#10;&#10;def RVBS_1 = Round(Buying_1 / MinSelling_1, 2);&#10;&#10;def volMin_1 = Volume[1]/1000;&#10;&#10;def openMin_1 = Open[1]*100;&#10;def highMin_1 = High[1]*100;&#10;def lowMin_1 = Low[1]*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH_1 = Round(((highMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;def prcentL_1 = Round(((lowMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;&#10;def division_1 = (highMin_1 + lowMin_1)/2;&#10;&#10;def percentoh_l = ((division_1 - openMin_1)/openMin_1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSigna_l = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorP_l = percentoh_l;&#10;&#10;&#10;##==============================&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;plot ragSigna_l = RVBS_1 &gt; 10 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;def ragSignal = RVBS1 &gt; 10 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;#plot valor = if concat(ragSignal, &quot;&quot;) == &quot;N/A&quot; then 0 else if ragSignal &gt;= 0 then 1 else 0;&#10;&#10;def  valor = ragSignal or ragSigna_l;&#10;&#10;def ragSigna0 = RVBS1 &gt;= 7 &amp;&amp; V1 &gt; 250000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;&#10;def ragSigna2 = RVBS1 &gt;= 100 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 0 ;&#10;&#10;def valor2 = ragSigna2;&#10;&#10;&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then CreateColor(204, 204, 255) else color.white);&#10;&#10;AddLabelForReferencing(yes, concat(valor2, &quot;&quot;), if valor2 &gt; 0 then CreateColor(204, 204, 255) else if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;&#10;&#10;" INDEX="12" NAME="gar_1" PRICE_TYPE="last" VERSION="140680"/>
    <QUOTE-13 AGG_PERIOD="10m" CANDLE_SESSION="false" CODE="&#10;#===================== borrar codigo&#10;&#10;def volMin = Volume[0]/1000;&#10;&#10;def openMin1 = Open*100;&#10;def highMin1 = High*100;&#10;def lowMin1 = Low*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH = Round(((highMin1 - openMin1)/openMin1)*100,2);&#10;&#10;def prcentL = Round(((lowMin1 - openMin1)/openMin1)*100,2);&#10;&#10;&#10;def division = (highMin1 + lowMin1)/2;&#10;&#10;def percentohl = ((division - openMin1)/openMin1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSignal = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorPl = percentohl;&#10;&#10;&#10;#plot variable = 11111;&#10;&#10;declare lower;&#10;&#10;def O1 = open;&#10;def H1 = high;&#10;def C1 = close;&#10;def L1 = low;&#10;def V1 = volume;&#10;def Buying1 = if isNAN(V1*(C1-L1)/(H1-L1)) then 0 else V1*(C1-L1)/(H1-L1);&#10;def Selling1 = if isNAN(V1*(H1-C1)/(H1-L1)) then 0 else V1*(H1-C1)/(H1-L1);&#10;&#10;&#10;def Selling2 = 1;&#10;def Buying2 = 1;&#10;&#10;&#10;def MinSelling1 = if Selling1 &lt;= 0 then Selling2 else Selling1;&#10;def MinBulling1 = if Buying1  &lt;= 0 then Buying2 else Buying1;&#10;&#10;&#10;def RVBS1 = Round(Buying1 / MinSelling1, 2);&#10;&#10;#valor.SetDefaultColor(CreateColor(109, 156, 230));&#10;#valor.SetPaintingStrategy(PaintingStrategy.ARROW_UP);&#10;#valor.SetLineWeight(2);&#10;&#10;##==============================&#10;&#10;def O_1 = open[1];&#10;def H_1 = high[1];&#10;def C_1 = close[1];&#10;def L_1 = low[1];&#10;def V_1 = volume[1];&#10;def Buying_1 = V_1*(C_1-L_1)/(H_1-L_1);&#10;def Selling_1 = V_1*(H_1-C_1)/(H_1-L_1);&#10;&#10;&#10;def Selling_2 = 1;&#10;def Buying_2 = 1;&#10;&#10;&#10;def MinSelling_1 = if Selling_1 &lt;= 0 then Selling_2 else Selling_1;&#10;def MinBulling_1 = if Buying_1  &lt;= 0 then Buying_2 else Buying_1;&#10;&#10;&#10;def RVBS_1 = Round(Buying_1 / MinSelling_1, 2);&#10;&#10;def volMin_1 = Volume[1]/1000;&#10;&#10;def openMin_1 = Open[1]*100;&#10;def highMin_1 = High[1]*100;&#10;def lowMin_1 = Low[1]*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH_1 = Round(((highMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;def prcentL_1 = Round(((lowMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;&#10;def division_1 = (highMin_1 + lowMin_1)/2;&#10;&#10;def percentoh_l = ((division_1 - openMin_1)/openMin_1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSigna_l = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorP_l = percentoh_l;&#10;&#10;&#10;##==============================&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;def ragSigna_l = RVBS_1 &gt; 10 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;plot ragSignal = RVBS1 &gt; 10 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;#plot valor = if concat(ragSignal, &quot;&quot;) == &quot;N/A&quot; then 0 else if ragSignal &gt;= 0 then 1 else 0;&#10;&#10;def valor = ragSignal or ragSigna_l;&#10;&#10;def ragSigna0 = RVBS1 &gt;= 7 &amp;&amp; V1 &gt; 250000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;&#10;def ragSigna2 = RVBS1 &gt;= 100 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 0 ;&#10;&#10;def valor2 = ragSigna2;&#10;&#10;&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then CreateColor(204, 204, 255) else color.white);&#10;&#10;AddLabelForReferencing(yes, concat(valor2, &quot;&quot;), if valor2 &gt; 0 then CreateColor(204, 204, 255) else if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;&#10;&#10;" INDEX="13" NAME="gar" PRICE_TYPE="last" VERSION="140677"/>
    <QUOTE-15 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="def agg = AggregationPeriod.DAY; &#10;&#10;def dataVolDay0 = volume(period = agg)[2];&#10;def dataVolDay1 = volume(period = agg)[3];&#10;def dataVolDay2 = volume(period = agg)[4];&#10;def dataVolDay3 = volume(period = agg)[5];&#10;def dataVolDay4 = volume(period = agg)[6];&#10;def dataVolDay5 = volume(period = agg)[7];&#10;def dataVolDay6 = volume(period = agg)[8];&#10;def dataVolDay7 = volume(period = agg)[9];&#10;def dataVolDay8 = volume(period = agg)[10];&#10;def dataVolDay9 = volume(period = agg)[11];&#10;&#10;def avg_2 = Round((  dataVolDay0 +&#10;                dataVolDay1 +&#10;                dataVolDay2 +&#10;                dataVolDay3 +&#10;                dataVolDay4 +&#10;                dataVolDay5 +&#10;                dataVolDay6 +&#10;                dataVolDay7 +&#10;                dataVolDay8 +&#10;                dataVolDay9  )/ 10, 0);&#10;&#10;plot res_avg_2 = Round(avg_2 / 1000,0);" INDEX="15" NAME="Avg_2" PRICE_TYPE="last" VERSION="412625"/>
    <QUOTE-16 AGG_PERIOD="2m" CANDLE_SESSION="false" CODE="INPUT Start = 0400;&#10;INPUT End = 0929;&#10;&#10;DEF VolumeFromStart = SecondsFromTime(Start) &gt;= 0 and SecondsTillTime(End) &gt; 0;&#10;DEF VolumeAtEnd = SecondsFromTime(End) &gt;= 0;&#10;DEF VolumeRange = VolumeFromStart and !VolumeFromStart[1];&#10;DEF VolumeInRange = if VolumeRange then volume else if VolumeFromStart then VolumeInRange[1] + volume else VolumeInRange[1];&#10;DEF V = (VolumeAtEnd + VolumeInRange);&#10;&#10;&#10;PLOT CumulativeVolume = if VolumeFromStart then VolumeInRange else Double.NaN;&#10;&#10;" INDEX="16" NAME="Custom-pre" PRICE_TYPE="last" VERSION="412259"/>
    <QUOTE-17 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="&#10;#===================== borrar codigo&#10;&#10;def volMin = Volume[0]/1000;&#10;&#10;def openMin1 = Open*100;&#10;def highMin1 = High*100;&#10;def lowMin1 = Low*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH = Round(((highMin1 - openMin1)/openMin1)*100,2);&#10;&#10;def prcentL = Round(((lowMin1 - openMin1)/openMin1)*100,2);&#10;&#10;&#10;def division = (highMin1 + lowMin1)/2;&#10;&#10;def percentohl = ((division - openMin1)/openMin1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSignal = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorPl = percentohl;&#10;&#10;&#10;#plot variable = 11111;&#10;&#10;declare lower;&#10;&#10;def O1 = open;&#10;def H1 = high;&#10;def C1 = close;&#10;def L1 = low;&#10;def V1 = volume;&#10;def Buying1 = if isNAN(V1*(C1-L1)/(H1-L1)) then 0 else V1*(C1-L1)/(H1-L1);&#10;def Selling1 = if isNAN(V1*(H1-C1)/(H1-L1)) then 0 else V1*(H1-C1)/(H1-L1);&#10;&#10;&#10;def Selling2 = 1;&#10;def Buying2 = 1;&#10;&#10;&#10;def MinSelling1 = if Selling1 &lt;= 0 then Selling2 else Selling1;&#10;def MinBulling1 = if Buying1  &lt;= 0 then Buying2 else Buying1;&#10;&#10;&#10;def RVBS1 = Round(Buying1 / MinSelling1, 2);&#10;&#10;#valor.SetDefaultColor(CreateColor(109, 156, 230));&#10;#valor.SetPaintingStrategy(PaintingStrategy.ARROW_UP);&#10;#valor.SetLineWeight(2);&#10;&#10;##==============================&#10;&#10;def O_1 = open[1];&#10;def H_1 = high[1];&#10;def C_1 = close[1];&#10;def L_1 = low[1];&#10;def V_1 = volume[1];&#10;def Buying_1 = V_1*(C_1-L_1)/(H_1-L_1);&#10;def Selling_1 = V_1*(H_1-C_1)/(H_1-L_1);&#10;&#10;&#10;def Selling_2 = 1;&#10;def Buying_2 = 1;&#10;&#10;&#10;def MinSelling_1 = if Selling_1 &lt;= 0 then Selling_2 else Selling_1;&#10;def MinBulling_1 = if Buying_1  &lt;= 0 then Buying_2 else Buying_1;&#10;&#10;&#10;def RVBS_1 = Round(Buying_1 / MinSelling_1, 2);&#10;&#10;def volMin_1 = Volume[1]/1000;&#10;&#10;def openMin_1 = Open[1]*100;&#10;def highMin_1 = High[1]*100;&#10;def lowMin_1 = Low[1]*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH_1 = Round(((highMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;def prcentL_1 = Round(((lowMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;&#10;def division_1 = (highMin_1 + lowMin_1)/2;&#10;&#10;def percentoh_l = ((division_1 - openMin_1)/openMin_1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSigna_l = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorP_l = percentoh_l;&#10;&#10;&#10;##==============================&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;def ragSigna_l = RVBS_1 &gt; 10 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;def ragSignal = RVBS1 &gt; 10 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;#plot valor = if concat(ragSignal, &quot;&quot;) == &quot;N/A&quot; then 0 else if ragSignal &gt;= 0 then 1 else 0;&#10;&#10;#plot valor = ragSignal or ragSigna_l;&#10;&#10;def ragSigna_0 = RVBS_1 &gt;= 7 &amp;&amp; V_1 &gt; 250000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;def ragSigna0 = RVBS1 &gt;= 7 &amp;&amp; V1 &gt; 250000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;&#10;def ragSigna2 = RVBS1 &gt;= 100 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 0 ;&#10;&#10;def ragSigna_2 = RVBS_1 &gt;= 100 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 0 ;&#10;&#10;def valor2 = ragSigna2;&#10;&#10;&#10;plot valor = ragSignal or ragSigna_l or ragSigna0 or ragSigna_0 or ragSigna2 or ragSigna_2;&#10;&#10;&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then CreateColor(204, 204, 255) else color.white);&#10;&#10;AddLabelForReferencing(yes, concat(valor2, &quot;&quot;), if valor2 &gt; 0 then CreateColor(102, 178, 255) else if valor &gt; 0 then CreateColor(102, 178, 255) else color.white);&#10;&#10;&#10;&#10;&#10;" INDEX="17" NAME="GarPlCel" PRICE_TYPE="last" VERSION="142559"/>
    <QUOTE-18 AGG_PERIOD="m" CANDLE_SESSION="false" CODE="plot spread = ask - bid;&#10;#AssignBackgroundColor(if spread &lt; 0.05 then Color.GREEN else if spread &lt; 0.25 then Color.YELLOW else Color.RED);&#10;&#10;AddLabelForReferencing(yes, spread, if spread &lt;= .05 then Color.LIGHT_GREEN else if spread &lt;= .10 then Color.WHITE else COLOR.black);" INDEX="18" NAME="Spr" PRICE_TYPE="mark" VERSION="141101"/>
    <QUOTE-2 AGG_PERIOD="d" CANDLE_SESSION="false" CODE="#### RelVolD&#10;&#10;def relVol = Round(volume / ((volume(period = AggregationPeriod.DAY)[1] + volume(period = AggregationPeriod.DAY)[2] + volume(period = AggregationPeriod.DAY)[3] + volume(period = AggregationPeriod.DAY)[4] + volume(period = AggregationPeriod.DAY)[5] + volume(period = AggregationPeriod.DAY)[6] + volume(period = AggregationPeriod.DAY)[7] + volume(period = AggregationPeriod.DAY)[8] + volume(period = AggregationPeriod.DAY)[9] + volume(period = AggregationPeriod.DAY)[10]) / 10), 2);&#10;&#10;plot res = relVol;&#10;AddLabelForReferencing(yes, concat(relVol, &quot;&quot;), if relVol &gt; 2.50 then if relVol &gt; 2.50 &amp;&amp; relVol&lt;= 5.00 then color.WHITE else  CreateColor(88, 142, 204) else color.BLACK);&#10;&#10;#### RelVolD&#10;&#10;" INDEX="2" NAME="RelVolD" PRICE_TYPE="mark" VERSION="1438132"/>
    <QUOTE-3 AGG_PERIOD="10m" CANDLE_SESSION="false" CODE="#### RelVol10&#10;&#10;&#10;def relVol = Round(volume(period = AggregationPeriod.TEN_MIN)[0] / ((volume(period = AggregationPeriod.TEN_MIN)[1] + volume(period = AggregationPeriod.TEN_MIN)[2] + volume(period = AggregationPeriod.TEN_MIN)[3] + volume(period = AggregationPeriod.TEN_MIN)[4] + volume(period = AggregationPeriod.TEN_MIN)[5] + volume(period = AggregationPeriod.TEN_MIN)[6] + volume(period = AggregationPeriod.TEN_MIN)[7] + volume(period = AggregationPeriod.TEN_MIN)[8] + volume(period = AggregationPeriod.TEN_MIN)[9] + volume(period = &#10;AggregationPeriod.TEN_MIN)[10] + volume(period =&#10;AggregationPeriod.TEN_MIN)[12] + volume(period =&#10;AggregationPeriod.TEN_MIN)[13] + volume(period =&#10;AggregationPeriod.TEN_MIN)[14] + volume(period =&#10;AggregationPeriod.TEN_MIN)[15] + volume(period =&#10;AggregationPeriod.TEN_MIN)[16] + volume(period =&#10;AggregationPeriod.TEN_MIN)[17] + volume(period =&#10;AggregationPeriod.TEN_MIN)[18] + volume(period =&#10;AggregationPeriod.TEN_MIN)[19] + volume(period =&#10;AggregationPeriod.TEN_MIN)[20]) / 20), 2);&#10;&#10;def relVol_2 = Round(volume(period = AggregationPeriod.TWENTY_MIN)[0] / ((volume(period = AggregationPeriod.TWENTY_MIN)[1] + volume(period = AggregationPeriod.TWENTY_MIN)[2] + volume(period = AggregationPeriod.TWENTY_MIN)[3] + volume(period = AggregationPeriod.TWENTY_MIN)[4] + volume(period = AggregationPeriod.TWENTY_MIN)[5] + volume(period = AggregationPeriod.TWENTY_MIN)[6] + volume(period = AggregationPeriod.TWENTY_MIN)[7] + volume(period = AggregationPeriod.TWENTY_MIN)[8] + volume(period = AggregationPeriod.TWENTY_MIN)[9] + volume(period = &#10;AggregationPeriod.TWENTY_MIN)[10] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[12] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[13] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[14] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[15] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[16] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[17] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[18] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[19] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[20]) / 20), 2);&#10;&#10;&#10;def relVol_1 = Round(volume / ((volume(period = AggregationPeriod.THIRTY_MIN)[1] + volume(period = AggregationPeriod.THIRTY_MIN)[2] + volume(period = AggregationPeriod.THIRTY_MIN)[3] + volume(period = AggregationPeriod.THIRTY_MIN)[4] + volume(period = AggregationPeriod.THIRTY_MIN)[5] + volume(period = AggregationPeriod.THIRTY_MIN)[6] + volume(period = AggregationPeriod.THIRTY_MIN)[7] + volume(period = AggregationPeriod.THIRTY_MIN)[8] + volume(period = AggregationPeriod.THIRTY_MIN)[9] + volume(period = &#10;AggregationPeriod.THIRTY_MIN)[10] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[12] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[13] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[14] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[15] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[16] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[17] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[18] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[19] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[20]) / 20), 2);&#10;&#10;&#10;plot res = relVol;&#10;AddLabelForReferencing(yes, concat(relVol, &quot;&quot;), if relVol &gt; 2.50 then if relVol &gt; 2.50 &amp;&amp; relVol &lt;= 5.00 then color.WHITE else  CreateColor(88, 142, 204) else color.BLACK);&#10;&#10;&#10;#### RelVol10&#10;&#10;&#10;&#10;" INDEX="3" NAME="RelVol10" PRICE_TYPE="last" VERSION="430"/>
    <QUOTE-4 AGG_PERIOD="10m" CANDLE_SESSION="false" CODE="#### RelVol10&#10;&#10;&#10;def relVol = Round(volume(period = AggregationPeriod.TEN_MIN)[0] / ((volume(period = AggregationPeriod.TEN_MIN)[1] + volume(period = AggregationPeriod.TEN_MIN)[2] + volume(period = AggregationPeriod.TEN_MIN)[3] + volume(period = AggregationPeriod.TEN_MIN)[4] + volume(period = AggregationPeriod.TEN_MIN)[5] + volume(period = AggregationPeriod.TEN_MIN)[6] + volume(period = AggregationPeriod.TEN_MIN)[7] + volume(period = AggregationPeriod.TEN_MIN)[8] + volume(period = AggregationPeriod.TEN_MIN)[9] + volume(period = &#10;AggregationPeriod.TEN_MIN)[10] + volume(period =&#10;AggregationPeriod.TEN_MIN)[12] + volume(period =&#10;AggregationPeriod.TEN_MIN)[13] + volume(period =&#10;AggregationPeriod.TEN_MIN)[14] + volume(period =&#10;AggregationPeriod.TEN_MIN)[15] + volume(period =&#10;AggregationPeriod.TEN_MIN)[16] + volume(period =&#10;AggregationPeriod.TEN_MIN)[17] + volume(period =&#10;AggregationPeriod.TEN_MIN)[18] + volume(period =&#10;AggregationPeriod.TEN_MIN)[19] + volume(period =&#10;AggregationPeriod.TEN_MIN)[20] + volume(period =&#10;AggregationPeriod.TEN_MIN)[21] + volume(period =&#10;AggregationPeriod.TEN_MIN)[22] + volume(period =&#10;AggregationPeriod.TEN_MIN)[23] + volume(period =&#10;AggregationPeriod.TEN_MIN)[24] + volume(period =&#10;AggregationPeriod.TEN_MIN)[25]) / 25), 2)/10;&#10;&#10;def relVol_2 = Round(volume(period = AggregationPeriod.TWENTY_MIN)[0] / ((volume(period = AggregationPeriod.TWENTY_MIN)[1] + volume(period = AggregationPeriod.TWENTY_MIN)[2] + volume(period = AggregationPeriod.TWENTY_MIN)[3] + volume(period = AggregationPeriod.TWENTY_MIN)[4] + volume(period = AggregationPeriod.TWENTY_MIN)[5] + volume(period = AggregationPeriod.TWENTY_MIN)[6] + volume(period = AggregationPeriod.TWENTY_MIN)[7] + volume(period = AggregationPeriod.TWENTY_MIN)[8] + volume(period = AggregationPeriod.TWENTY_MIN)[9] + volume(period = &#10;AggregationPeriod.TWENTY_MIN)[10] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[12] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[13] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[14] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[15] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[16] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[17] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[18] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[19] + volume(period =&#10;AggregationPeriod.TWENTY_MIN)[20]) / 20), 2);&#10;&#10;&#10;def relVol_1 = Round(volume / ((volume(period = AggregationPeriod.THIRTY_MIN)[1] + volume(period = AggregationPeriod.THIRTY_MIN)[2] + volume(period = AggregationPeriod.THIRTY_MIN)[3] + volume(period = AggregationPeriod.THIRTY_MIN)[4] + volume(period = AggregationPeriod.THIRTY_MIN)[5] + volume(period = AggregationPeriod.THIRTY_MIN)[6] + volume(period = AggregationPeriod.THIRTY_MIN)[7] + volume(period = AggregationPeriod.THIRTY_MIN)[8] + volume(period = AggregationPeriod.THIRTY_MIN)[9] + volume(period = &#10;AggregationPeriod.THIRTY_MIN)[10] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[12] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[13] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[14] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[15] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[16] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[17] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[18] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[19] + volume(period =&#10;AggregationPeriod.THIRTY_MIN)[20]) / 20), 2);&#10;&#10;&#10;def spread = (((ask * 1000) - (bid * 1000)) / (bid * 1000)) * 100;&#10;&#10;plot res = if relVol &gt; 0.20 &amp;&amp; relVol &lt; 1.00&#10;&#10;&amp;&amp; !IsNaN(relVol) &amp;&amp; spread &lt; 2 &amp;&amp;  volume &gt; 50000 &#10;&#10;then relVol else 0;&#10;&#10;AddLabelForReferencing(yes, concat(res, &quot;&quot;), if res &gt; 0.50 then CreateColor(88, 142, 204) else  if res &lt; 0.20 then color.BLACK else color.ligHT_GREEN );&#10;&#10;#else color.BLACK);&#10;&#10;&#10;#### RelVol10&#10;&#10;&#10;&#10;" INDEX="4" NAME="Rel_vol_10" PRICE_TYPE="mark" VERSION="1437396"/>
    <QUOTE-6 AGG_PERIOD="5m" CANDLE_SESSION="false" CODE="def O = open;&#10;def H = high;&#10;def C = close;&#10;def L = low;&#10;def V = volume;&#10;def Buying = V*(C-L)/(H-L);&#10;def Selling = V*(H-C)/(H-L);&#10;&#10;&#10;&#10;def Selling11 = 1;&#10;def Buying11 = 1;&#10;&#10;&#10;def MinSelling = if Selling &lt;= 0 then Selling11 else Selling;&#10;def MinBulling = if Buying  &lt;= 0 then Buying11 else Buying;&#10;&#10;&#10;Plot RVBS = Round(Buying / MinSelling, 2);" INDEX="6" NAME="GAR" PRICE_TYPE="last" VERSION="110946"/>
    <QUOTE-9 AGG_PERIOD="5m" CANDLE_SESSION="false" CODE="&#10;#===================== borrar codigo&#10;&#10;def volMin = Volume[0]/1000;&#10;&#10;def openMin1 = Open*100;&#10;def highMin1 = High*100;&#10;def lowMin1 = Low*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH = Round(((highMin1 - openMin1)/openMin1)*100,2);&#10;&#10;def prcentL = Round(((lowMin1 - openMin1)/openMin1)*100,2);&#10;&#10;&#10;def division = (highMin1 + lowMin1)/2;&#10;&#10;def percentohl = ((division - openMin1)/openMin1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSignal = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorPl = percentohl;&#10;&#10;&#10;#plot variable = 11111;&#10;&#10;declare lower;&#10;&#10;def O1 = open;&#10;def H1 = high;&#10;def C1 = close;&#10;def L1 = low;&#10;def V1 = volume;&#10;def Buying1 = if isNAN(V1*(C1-L1)/(H1-L1)) then 0 else V1*(C1-L1)/(H1-L1);&#10;def Selling1 = if isNAN(V1*(H1-C1)/(H1-L1)) then 0 else V1*(H1-C1)/(H1-L1);&#10;&#10;&#10;def Selling2 = 1;&#10;def Buying2 = 1;&#10;&#10;&#10;def MinSelling1 = if Selling1 &lt;= 0 then Selling2 else Selling1;&#10;def MinBulling1 = if Buying1  &lt;= 0 then Buying2 else Buying1;&#10;&#10;&#10;def RVBS1 = Round(Buying1 / MinSelling1, 2);&#10;&#10;#valor.SetDefaultColor(CreateColor(109, 156, 230));&#10;#valor.SetPaintingStrategy(PaintingStrategy.ARROW_UP);&#10;#valor.SetLineWeight(2);&#10;&#10;##==============================&#10;&#10;def O_1 = open[1];&#10;def H_1 = high[1];&#10;def C_1 = close[1];&#10;def L_1 = low[1];&#10;def V_1 = volume[1];&#10;def Buying_1 = V_1*(C_1-L_1)/(H_1-L_1);&#10;def Selling_1 = V_1*(H_1-C_1)/(H_1-L_1);&#10;&#10;&#10;def Selling_2 = 1;&#10;def Buying_2 = 1;&#10;&#10;&#10;def MinSelling_1 = if Selling_1 &lt;= 0 then Selling_2 else Selling_1;&#10;def MinBulling_1 = if Buying_1  &lt;= 0 then Buying_2 else Buying_1;&#10;&#10;&#10;def RVBS_1 = Round(Buying_1 / MinSelling_1, 2);&#10;&#10;def volMin_1 = Volume[1]/1000;&#10;&#10;def openMin_1 = Open[1]*100;&#10;def highMin_1 = High[1]*100;&#10;def lowMin_1 = Low[1]*100; # 1321&#10;&#10;#AssignPriceColor(if closeMin &lt; openMin &amp;&amp; volMin &gt; volMinimo then CreateColor(236, 88, 108) else Color.CURRENT );&#10;&#10;def prcentH_1 = Round(((highMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;def prcentL_1 = Round(((lowMin_1 - openMin_1)/openMin_1)*100,2);&#10;&#10;&#10;def division_1 = (highMin_1 + lowMin_1)/2;&#10;&#10;def percentoh_l = ((division_1 - openMin_1)/openMin_1)*100;&#10;&#10;&#10;#plot percentohl_temp = Round(((division - openMin1)/openMin1)*100,2);&#10;&#10;&#10;&#10;def upSigna_l = ((percentohl &gt;= 2  &amp;&amp; lowMin1 &gt;= 2100 &amp;&amp; lowMin1 &lt;= 2500) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &gt;= 500 &amp;&amp; lowMin1 &lt; 2100) OR (percentohl &gt;= 3 &amp;&amp; lowMin1 &lt; 500)) &amp;&amp; ((volMin &gt;= 100 &amp;&amp; lowMin1 &gt;= 500) OR (volMin &gt;= 200 &amp;&amp; lowMin1 &lt; 500)) ;&#10;&#10;def valorP_l = percentoh_l;&#10;&#10;&#10;##==============================&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then color.LIGHT_GREEN else color.white);&#10;&#10;def ragSigna_l = RVBS_1 &gt; 10 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;def ragSignal = RVBS1 &gt; 10 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;#plot valor = if concat(ragSignal, &quot;&quot;) == &quot;N/A&quot; then 0 else if ragSignal &gt;= 0 then 1 else 0;&#10;&#10;#plot valor = ragSignal or ragSigna_l;&#10;&#10;def ragSigna_0 = RVBS_1 &gt;= 7 &amp;&amp; V_1 &gt; 250000 &amp;&amp; valorP_l &gt;= 1 ;&#10;&#10;def ragSigna0 = RVBS1 &gt;= 7 &amp;&amp; V1 &gt; 250000 &amp;&amp; valorPl &gt;= 1 ;&#10;&#10;&#10;def ragSigna2 = RVBS1 &gt;= 100 &amp;&amp; V1 &gt; 150000 &amp;&amp; valorPl &gt;= 0 ;&#10;&#10;def ragSigna_2 = RVBS_1 &gt;= 100 &amp;&amp; V_1 &gt; 150000 &amp;&amp; valorP_l &gt;= 0 ;&#10;&#10;def valor2 = ragSigna2;&#10;&#10;&#10;plot valor = ragSignal or ragSigna_l or ragSigna0 or ragSigna_0 or ragSigna2 or ragSigna_2;&#10;&#10;&#10;#AddLabelForReferencing(yes, concat(valor, &quot;&quot;), if valor &gt; 0 then CreateColor(204, 204, 255) else color.white);&#10;&#10;AddLabelForReferencing(yes, concat(valor2, &quot;&quot;), if valor2 &gt; 0 then CreateColor(102, 178, 255) else if valor &gt; 0 then CreateColor(102, 178, 255) else color.white);&#10;&#10;&#10;&#10;&#10;" INDEX="9" NAME="GarPL" PRICE_TYPE="mark" VERSION="186528"/>
  </CUSTOM_QUOTES_CACHE>
</PREFERENCES>
